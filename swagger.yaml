---
swagger: "2.0"
info:
  description: "This is a sample."
  version: "1.0.0"
  title: "Sandbox"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "users"
schemes:
- "http"
paths:
  /users:
    post:
      tags:
      - "users"
      summary: "Create a new user."
      description: ""
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/WriteUser"
      responses:
        201:
          description: "Create"
          schema:
            $ref: "#/definitions/User"
        400:
          $ref: "#/responses/BadRequest"
        404:
          $ref: "#/responses/NotFound"
    get:
      tags:
      - "users"
      summary: "Lists users."
      description: ""
      operationId: "getUsers"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "sort"
        required: false
        type: "string"
        enum:
        - "user_id"
        - "username"
        - "user_status"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Users"
  /users/{user_id}:
    get:
      tags:
      - "users"
      summary: "Get the user."
      description: ""
      operationId: "getUser"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/PathUserId"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        404:
          $ref: "#/responses/NotFound"
    put:
      tags:
      - "users"
      summary: "Update the user."
      description: ""
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/PathUserId"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/WriteUser"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        400:
          $ref: "#/responses/BadRequest"
        404:
          $ref: "#/responses/NotFound"
    delete:
      tags:
      - "users"
      summary: "Delete the user."
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/PathUserId"
      responses:
        204:
          $ref: "#/responses/NoContent"
        404:
          $ref: "#/responses/NotFound"
parameters:
  PathUserId:
    in: "path"
    name: "user_id"
    required: true
    type: "integer"
    format: "int64"
    x-example: 42
responses:
  NoContent:
    description: "No Content"
  BadRequest:
    description: "Bad Request"
    schema:
      $ref: "#/definitions/Errors"
  NotFound:
    description: "Not Found"
definitions:
  WriteUser:
    type: "object"
    properties:
      username:
        type: "string"
        maxLength: 16
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
        minLength: 4
        maxLength: 20
      phone:
        type: "string"
        x-digit: true
      user_status:
        type: "integer"
        format: "int32"
        description: "User Status"
      height:
        type: "number"
        format: "float"
      born_on:
        type: "string"
        format: "date-time"
    example:
      username: "username1"
      first_name: "first_name1"
      last_name: "last_name1"
      email: "sample@example.com"
      password: "password1"
      phone: "09012345678"
      user_status: 1
      height: 173.5
      born_on: "2001-10-15T12:34:56Z"
    required:
      - username
      - first_name
      - last_name
      - email
      - password
  User:
    type: "object"
    properties:
      user_id:
        type: "integer"
      username:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      user_status:
        type: "integer"
        description: "User Status"
    example:
      user_id: 1
      username: "username1"
      first_name: "first_name1"
      last_name: "last_name1"
      email: "sample@example.com"
      password: "password1"
      phone: "09012345678"
      user_status: 1
      height: 173.5
      born_on: "2001-10-15T12:34:56Z"
  Users:
    type: "object"
    properties:
      users:
        type: "array"
        items:
          $ref: "#/definitions/User"
  Errors:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          $ref: "#/definitions/Error"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
      field:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
